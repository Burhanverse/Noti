name: Debug APK Builder

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Init Build Env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Run Tests
        run: bash ./gradlew test --stacktrace

  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Write sign info
        if: github.repository == 'Burhanverse/Noti'
        run: |
          if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.KEY_ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile='${{ github.workspace }}/key.jks' >> keystore.properties
            echo ${{ secrets.KEYSTORE }} | base64 --decode > ${{ github.workspace }}/key.jks
          fi

      - name: Build with Gradle
        run: |
          APP_NAME="${{ github.event.repository.name }}"
          bash ./gradlew assembleDebug --stacktrace
          mv ./app/build/outputs/apk/debug/app-debug.apk "./${APP_NAME}.apk"
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: ./${{ github.event.repository.name }}.apk

  release:
    name: Release APK
    runs-on: ubuntu-latest
    needs: apk
    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: "Please sign the apk using apksigner/mtmanager as the generated apk is unsigned."
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${APP_NAME}.apk
          asset_name: ./${APP_NAME}.apk
          asset_content_type: application/vnd.android.package-archive
